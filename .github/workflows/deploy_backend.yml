name: Deploy Backend

on:
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Package Backend Code Modules
        run: |
          mkdir -p code_artefacts

          for file in backend_code/*; do
            relative_file=$(basename "$file")
            zip -r "code_artefacts/$relative_file.zip" "$file"
          done

      - name: Generate tfvars
        run: |
          cat > aws_backend/terraform.tfvars <<- EOF
          deployment_info = {
            project_name = ""{{ env.PROJECT_NAME }}",
            environment = "${{ env.ENVIRONMENT }}",
            region = "${{ env.AWS_REGION }}",
          }
          code_artefacts_path = "${{ github.workspace }}/code_artefacts"
          EOF

      - name: Generate backend config
        run: |
          cat > aws_backend/backend.tfvars <<- EOF
          bucket = "${{ secrets.TF_STATE_BUCKET }}"
          key    = "${{ secrets.TF_STATE_KEY }}"
          region = "${{ secrets.TF_STATE_REGION }}"
          EOF

  deploy-terraform:
    runs-on: ubuntu-latest
    environment: Dev
    needs: build
    defaults:
      run:
        working-directory: aws_backend
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.tfvars

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan -var-file=terraform.tfvars

      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve tfplan
