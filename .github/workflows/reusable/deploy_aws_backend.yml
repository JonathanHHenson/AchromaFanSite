on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: string
        required: true
      project_name:
        description: 'Name of the project'
        type: string
        required: true
      aws_region:
        description: 'AWS region to deploy to'
        type: string
        required: true
    secrets:
      aws_access_key_id:
        description: 'AWS access key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS secret access key'
        required: true
      tf_state_bucket:
        description: 'Terraform state bucket'
        required: true
      tf_state_key:
        description: 'Terraform state key'
        required: true
      tf_state_region:
        description: 'Terraform state region'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Package Backend Code Modules
        run: |
          mkdir -p "code_artefacts"

          for file in backend_code/*; do
            relative_file=$(basename "$file")
            zip -r "code_artefacts/$relative_file.zip" "$file"
          done

      - name: Upload Code Artefacts
        uses: actions/upload-artifact@v3
        with:
          name: code_artefacts_${{ inputs.environment }}
          path: code_artefacts

  deploy-terraform:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: aws_backend
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ inputs.aws_region }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Generate backend config
        run: |
          cat > backend.tfvars <<- EOF
          bucket = "${{ secrets.tf_state_bucket }}"
          key    = "${{ secrets.tf_state_key }}"
          region = "${{ secrets.tf_state_region }}"
          EOF

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.tfvars

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Download Code Artefacts
        uses: actions/download-artifact@v3
        with:
          name: code_artefacts_${{ inputs.environment }}
          # Extract the code artefacts to the code_artefacts directory
          path: ${{ github.workspace }}/code_artefacts

      - name: Generate tfvars
        run: |
          cat > terraform.tfvars <<- EOF
          deployment_info = {
            project_name = "${{ inputs.project_name }}",
            environment = "${{ inputs.environment }}",
            region = "${{ inputs.aws_region }}",
          }
          code_artefacts_path = "${{ github.workspace }}/code_artefacts"
          EOF

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan -var-file=terraform.tfvars

      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve tfplan
